// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nexclipper.proto

package nexclipper

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Metric_SourceType int32

const (
	Metric_NONE          Metric_SourceType = 0
	Metric_NODE          Metric_SourceType = 1
	Metric_PROCESS       Metric_SourceType = 2
	Metric_CONTAINER     Metric_SourceType = 3
	Metric_K8S_NODE      Metric_SourceType = 10
	Metric_K8S_POD       Metric_SourceType = 11
	Metric_K8S_CONTAINER Metric_SourceType = 12
)

var Metric_SourceType_name = map[int32]string{
	0:  "NONE",
	1:  "NODE",
	2:  "PROCESS",
	3:  "CONTAINER",
	10: "K8S_NODE",
	11: "K8S_POD",
	12: "K8S_CONTAINER",
}

var Metric_SourceType_value = map[string]int32{
	"NONE":          0,
	"NODE":          1,
	"PROCESS":       2,
	"CONTAINER":     3,
	"K8S_NODE":      10,
	"K8S_POD":       11,
	"K8S_CONTAINER": 12,
}

func (x Metric_SourceType) String() string {
	return proto.EnumName(Metric_SourceType_name, int32(x))
}

func (Metric_SourceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{3, 0}
}

type Request struct {
	DataInt32            []int32  `protobuf:"varint,1,rep,packed,name=data_int32,json=dataInt32,proto3" json:"data_int32,omitempty"`
	DataInt64            []int64  `protobuf:"varint,2,rep,packed,name=data_int64,json=dataInt64,proto3" json:"data_int64,omitempty"`
	DataString           []string `protobuf:"bytes,3,rep,name=data_string,json=dataString,proto3" json:"data_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetDataInt32() []int32 {
	if m != nil {
		return m.DataInt32
	}
	return nil
}

func (m *Request) GetDataInt64() []int64 {
	if m != nil {
		return m.DataInt64
	}
	return nil
}

func (m *Request) GetDataString() []string {
	if m != nil {
		return m.DataString
	}
	return nil
}

type Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code                 uint32   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	DataInt32            []int32  `protobuf:"varint,4,rep,packed,name=data_int32,json=dataInt32,proto3" json:"data_int32,omitempty"`
	DataInt64            []int64  `protobuf:"varint,5,rep,packed,name=data_int64,json=dataInt64,proto3" json:"data_int64,omitempty"`
	DataString           []string `protobuf:"bytes,6,rep,name=data_string,json=dataString,proto3" json:"data_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Response) GetDataInt32() []int32 {
	if m != nil {
		return m.DataInt32
	}
	return nil
}

func (m *Response) GetDataInt64() []int64 {
	if m != nil {
		return m.DataInt64
	}
	return nil
}

func (m *Response) GetDataString() []string {
	if m != nil {
		return m.DataString
	}
	return nil
}

type Status struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{2}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Status) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Metric struct {
	Value                float64           `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Ts                   int64             `protobuf:"varint,2,opt,name=ts,proto3" json:"ts,omitempty"`
	Cluster              string            `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node                 string            `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	SourceType           Metric_SourceType `protobuf:"varint,5,opt,name=source_type,json=sourceType,proto3,enum=Metric_SourceType" json:"source_type,omitempty"`
	Source               string            `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	SourceInt            int32             `protobuf:"varint,7,opt,name=source_int,json=sourceInt,proto3" json:"source_int,omitempty"`
	Endpoint             string            `protobuf:"bytes,8,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Name                 string            `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Label                string            `protobuf:"bytes,10,opt,name=label,proto3" json:"label,omitempty"`
	Type                 string            `protobuf:"bytes,11,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{3}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Metric) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Metric) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *Metric) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *Metric) GetSourceType() Metric_SourceType {
	if m != nil {
		return m.SourceType
	}
	return Metric_NONE
}

func (m *Metric) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Metric) GetSourceInt() int32 {
	if m != nil {
		return m.SourceInt
	}
	return 0
}

func (m *Metric) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Metric) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metric) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Metric) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type Metrics struct {
	Metrics              []*Metric `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{4}
}

func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type Agent struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	MachineId            string   `protobuf:"bytes,2,opt,name=machineId,proto3" json:"machineId,omitempty"`
	Cluster              string   `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Node                 *Node    `protobuf:"bytes,4,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Agent) Reset()         { *m = Agent{} }
func (m *Agent) String() string { return proto.CompactTextString(m) }
func (*Agent) ProtoMessage()    {}
func (*Agent) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{5}
}

func (m *Agent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agent.Unmarshal(m, b)
}
func (m *Agent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agent.Marshal(b, m, deterministic)
}
func (m *Agent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agent.Merge(m, src)
}
func (m *Agent) XXX_Size() int {
	return xxx_messageInfo_Agent.Size(m)
}
func (m *Agent) XXX_DiscardUnknown() {
	xxx_messageInfo_Agent.DiscardUnknown(m)
}

var xxx_messageInfo_Agent proto.InternalMessageInfo

func (m *Agent) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Agent) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

func (m *Agent) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *Agent) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type Node struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Os                   string   `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Platform             string   `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily       string   `protobuf:"bytes,4,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	PlatformVersion      string   `protobuf:"bytes,5,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	VirtualizationSystem string   `protobuf:"bytes,6,opt,name=virtualization_system,json=virtualizationSystem,proto3" json:"virtualization_system,omitempty"`
	VirtualizationRole   string   `protobuf:"bytes,7,opt,name=virtualization_role,json=virtualizationRole,proto3" json:"virtualization_role,omitempty"`
	Uptime               uint64   `protobuf:"varint,8,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Ipv4                 string   `protobuf:"bytes,9,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6                 string   `protobuf:"bytes,10,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Port                 uint32   `protobuf:"varint,11,opt,name=port,proto3" json:"port,omitempty"`
	Metrics              *Metrics `protobuf:"bytes,12,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{6}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Node) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Node) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Node) GetPlatformFamily() string {
	if m != nil {
		return m.PlatformFamily
	}
	return ""
}

func (m *Node) GetPlatformVersion() string {
	if m != nil {
		return m.PlatformVersion
	}
	return ""
}

func (m *Node) GetVirtualizationSystem() string {
	if m != nil {
		return m.VirtualizationSystem
	}
	return ""
}

func (m *Node) GetVirtualizationRole() string {
	if m != nil {
		return m.VirtualizationRole
	}
	return ""
}

func (m *Node) GetUptime() uint64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *Node) GetIpv4() string {
	if m != nil {
		return m.Ipv4
	}
	return ""
}

func (m *Node) GetIpv6() string {
	if m != nil {
		return m.Ipv6
	}
	return ""
}

func (m *Node) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Node) GetMetrics() *Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type NodeMetrics struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Metrics              *Metrics `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeMetrics) Reset()         { *m = NodeMetrics{} }
func (m *NodeMetrics) String() string { return proto.CompactTextString(m) }
func (*NodeMetrics) ProtoMessage()    {}
func (*NodeMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{7}
}

func (m *NodeMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeMetrics.Unmarshal(m, b)
}
func (m *NodeMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeMetrics.Marshal(b, m, deterministic)
}
func (m *NodeMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeMetrics.Merge(m, src)
}
func (m *NodeMetrics) XXX_Size() int {
	return xxx_messageInfo_NodeMetrics.Size(m)
}
func (m *NodeMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_NodeMetrics proto.InternalMessageInfo

func (m *NodeMetrics) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *NodeMetrics) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *NodeMetrics) GetMetrics() *Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type Process struct {
	Container            string   `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	Pid                  int32    `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cmd                  string   `protobuf:"bytes,4,opt,name=cmd,proto3" json:"cmd,omitempty"`
	User                 string   `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Group                string   `protobuf:"bytes,6,opt,name=group,proto3" json:"group,omitempty"`
	Metrics              *Metrics `protobuf:"bytes,7,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Process) Reset()         { *m = Process{} }
func (m *Process) String() string { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()    {}
func (*Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{8}
}

func (m *Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process.Unmarshal(m, b)
}
func (m *Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process.Marshal(b, m, deterministic)
}
func (m *Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process.Merge(m, src)
}
func (m *Process) XXX_Size() int {
	return xxx_messageInfo_Process.Size(m)
}
func (m *Process) XXX_DiscardUnknown() {
	xxx_messageInfo_Process.DiscardUnknown(m)
}

var xxx_messageInfo_Process proto.InternalMessageInfo

func (m *Process) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *Process) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *Process) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Process) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *Process) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Process) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Process) GetMetrics() *Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type ProcessAll struct {
	Cluster              string     `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Host                 string     `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Processes            []*Process `protobuf:"bytes,3,rep,name=processes,proto3" json:"processes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ProcessAll) Reset()         { *m = ProcessAll{} }
func (m *ProcessAll) String() string { return proto.CompactTextString(m) }
func (*ProcessAll) ProtoMessage()    {}
func (*ProcessAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{9}
}

func (m *ProcessAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessAll.Unmarshal(m, b)
}
func (m *ProcessAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessAll.Marshal(b, m, deterministic)
}
func (m *ProcessAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessAll.Merge(m, src)
}
func (m *ProcessAll) XXX_Size() int {
	return xxx_messageInfo_ProcessAll.Size(m)
}
func (m *ProcessAll) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessAll.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessAll proto.InternalMessageInfo

func (m *ProcessAll) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ProcessAll) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ProcessAll) GetProcesses() []*Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

type ProcessMetrics struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Container            string   `protobuf:"bytes,3,opt,name=container,proto3" json:"container,omitempty"`
	Pid                  int32    `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Metrics              *Metrics `protobuf:"bytes,6,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessMetrics) Reset()         { *m = ProcessMetrics{} }
func (m *ProcessMetrics) String() string { return proto.CompactTextString(m) }
func (*ProcessMetrics) ProtoMessage()    {}
func (*ProcessMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{10}
}

func (m *ProcessMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessMetrics.Unmarshal(m, b)
}
func (m *ProcessMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessMetrics.Marshal(b, m, deterministic)
}
func (m *ProcessMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessMetrics.Merge(m, src)
}
func (m *ProcessMetrics) XXX_Size() int {
	return xxx_messageInfo_ProcessMetrics.Size(m)
}
func (m *ProcessMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessMetrics proto.InternalMessageInfo

func (m *ProcessMetrics) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ProcessMetrics) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ProcessMetrics) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *ProcessMetrics) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ProcessMetrics) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProcessMetrics) GetMetrics() *Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type Container struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ContainerId          string   `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Image                string   `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Metrics              *Metrics `protobuf:"bytes,6,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{11}
}

func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (m *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(m, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Container) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *Container) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetMetrics() *Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type ContainerAll struct {
	Cluster              string       `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Host                 string       `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Containers           []*Container `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ContainerAll) Reset()         { *m = ContainerAll{} }
func (m *ContainerAll) String() string { return proto.CompactTextString(m) }
func (*ContainerAll) ProtoMessage()    {}
func (*ContainerAll) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{12}
}

func (m *ContainerAll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerAll.Unmarshal(m, b)
}
func (m *ContainerAll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerAll.Marshal(b, m, deterministic)
}
func (m *ContainerAll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerAll.Merge(m, src)
}
func (m *ContainerAll) XXX_Size() int {
	return xxx_messageInfo_ContainerAll.Size(m)
}
func (m *ContainerAll) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerAll.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerAll proto.InternalMessageInfo

func (m *ContainerAll) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ContainerAll) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ContainerAll) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type ContainerMetrics struct {
	Cluster              string   `protobuf:"bytes,1,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	ContainerId          string   `protobuf:"bytes,3,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Metrics              *Metrics `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerMetrics) Reset()         { *m = ContainerMetrics{} }
func (m *ContainerMetrics) String() string { return proto.CompactTextString(m) }
func (*ContainerMetrics) ProtoMessage()    {}
func (*ContainerMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{13}
}

func (m *ContainerMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMetrics.Unmarshal(m, b)
}
func (m *ContainerMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMetrics.Marshal(b, m, deterministic)
}
func (m *ContainerMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMetrics.Merge(m, src)
}
func (m *ContainerMetrics) XXX_Size() int {
	return xxx_messageInfo_ContainerMetrics.Size(m)
}
func (m *ContainerMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMetrics proto.InternalMessageInfo

func (m *ContainerMetrics) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ContainerMetrics) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *ContainerMetrics) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ContainerMetrics) GetMetrics() *Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type CPU struct {
	Cpu                  int32    `protobuf:"varint,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	VendorId             string   `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Family               string   `protobuf:"bytes,3,opt,name=family,proto3" json:"family,omitempty"`
	Model                string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Stepping             int32    `protobuf:"varint,5,opt,name=stepping,proto3" json:"stepping,omitempty"`
	PhysicalId           string   `protobuf:"bytes,6,opt,name=physical_id,json=physicalId,proto3" json:"physical_id,omitempty"`
	CoreId               string   `protobuf:"bytes,7,opt,name=core_id,json=coreId,proto3" json:"core_id,omitempty"`
	Cores                int32    `protobuf:"varint,8,opt,name=cores,proto3" json:"cores,omitempty"`
	ModelName            string   `protobuf:"bytes,9,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	Mhz                  float64  `protobuf:"fixed64,10,opt,name=mhz,proto3" json:"mhz,omitempty"`
	CacheSize            int32    `protobuf:"varint,11,opt,name=cache_size,json=cacheSize,proto3" json:"cache_size,omitempty"`
	Microcode            string   `protobuf:"bytes,12,opt,name=microcode,proto3" json:"microcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CPU) Reset()         { *m = CPU{} }
func (m *CPU) String() string { return proto.CompactTextString(m) }
func (*CPU) ProtoMessage()    {}
func (*CPU) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{14}
}

func (m *CPU) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CPU.Unmarshal(m, b)
}
func (m *CPU) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CPU.Marshal(b, m, deterministic)
}
func (m *CPU) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CPU.Merge(m, src)
}
func (m *CPU) XXX_Size() int {
	return xxx_messageInfo_CPU.Size(m)
}
func (m *CPU) XXX_DiscardUnknown() {
	xxx_messageInfo_CPU.DiscardUnknown(m)
}

var xxx_messageInfo_CPU proto.InternalMessageInfo

func (m *CPU) GetCpu() int32 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *CPU) GetVendorId() string {
	if m != nil {
		return m.VendorId
	}
	return ""
}

func (m *CPU) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *CPU) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *CPU) GetStepping() int32 {
	if m != nil {
		return m.Stepping
	}
	return 0
}

func (m *CPU) GetPhysicalId() string {
	if m != nil {
		return m.PhysicalId
	}
	return ""
}

func (m *CPU) GetCoreId() string {
	if m != nil {
		return m.CoreId
	}
	return ""
}

func (m *CPU) GetCores() int32 {
	if m != nil {
		return m.Cores
	}
	return 0
}

func (m *CPU) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *CPU) GetMhz() float64 {
	if m != nil {
		return m.Mhz
	}
	return 0
}

func (m *CPU) GetCacheSize() int32 {
	if m != nil {
		return m.CacheSize
	}
	return 0
}

func (m *CPU) GetMicrocode() string {
	if m != nil {
		return m.Microcode
	}
	return ""
}

type K8SObject struct {
	ApiVersion           string            `protobuf:"bytes,4,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	Metadata             string            `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec                 string            `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Status               string            `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Kind                 string            `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	Name                 string            `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Labels               map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	K8SCluster           string            `protobuf:"bytes,8,opt,name=k8s_cluster,json=k8sCluster,proto3" json:"k8s_cluster,omitempty"`
	K8SNamespace         string            `protobuf:"bytes,9,opt,name=k8s_namespace,json=k8sNamespace,proto3" json:"k8s_namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *K8SObject) Reset()         { *m = K8SObject{} }
func (m *K8SObject) String() string { return proto.CompactTextString(m) }
func (*K8SObject) ProtoMessage()    {}
func (*K8SObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{15}
}

func (m *K8SObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SObject.Unmarshal(m, b)
}
func (m *K8SObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SObject.Marshal(b, m, deterministic)
}
func (m *K8SObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SObject.Merge(m, src)
}
func (m *K8SObject) XXX_Size() int {
	return xxx_messageInfo_K8SObject.Size(m)
}
func (m *K8SObject) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SObject.DiscardUnknown(m)
}

var xxx_messageInfo_K8SObject proto.InternalMessageInfo

func (m *K8SObject) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *K8SObject) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

func (m *K8SObject) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *K8SObject) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *K8SObject) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *K8SObject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *K8SObject) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *K8SObject) GetK8SCluster() string {
	if m != nil {
		return m.K8SCluster
	}
	return ""
}

func (m *K8SObject) GetK8SNamespace() string {
	if m != nil {
		return m.K8SNamespace
	}
	return ""
}

type K8SCluster struct {
	Object               *K8SObject      `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	AgentCluster         string          `protobuf:"bytes,2,opt,name=agent_cluster,json=agentCluster,proto3" json:"agent_cluster,omitempty"`
	K8SNamespaces        []*K8SNamespace `protobuf:"bytes,3,rep,name=k8s_namespaces,json=k8sNamespaces,proto3" json:"k8s_namespaces,omitempty"`
	K8SNodes             []*K8SObject    `protobuf:"bytes,4,rep,name=k8s_nodes,json=k8sNodes,proto3" json:"k8s_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *K8SCluster) Reset()         { *m = K8SCluster{} }
func (m *K8SCluster) String() string { return proto.CompactTextString(m) }
func (*K8SCluster) ProtoMessage()    {}
func (*K8SCluster) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{16}
}

func (m *K8SCluster) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SCluster.Unmarshal(m, b)
}
func (m *K8SCluster) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SCluster.Marshal(b, m, deterministic)
}
func (m *K8SCluster) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SCluster.Merge(m, src)
}
func (m *K8SCluster) XXX_Size() int {
	return xxx_messageInfo_K8SCluster.Size(m)
}
func (m *K8SCluster) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SCluster.DiscardUnknown(m)
}

var xxx_messageInfo_K8SCluster proto.InternalMessageInfo

func (m *K8SCluster) GetObject() *K8SObject {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *K8SCluster) GetAgentCluster() string {
	if m != nil {
		return m.AgentCluster
	}
	return ""
}

func (m *K8SCluster) GetK8SNamespaces() []*K8SNamespace {
	if m != nil {
		return m.K8SNamespaces
	}
	return nil
}

func (m *K8SCluster) GetK8SNodes() []*K8SObject {
	if m != nil {
		return m.K8SNodes
	}
	return nil
}

type K8SNamespace struct {
	Object               *K8SObject   `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Items                []*K8SObject `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Workloads            []*K8SObject `protobuf:"bytes,3,rep,name=workloads,proto3" json:"workloads,omitempty"`
	Pods                 []*K8SPod    `protobuf:"bytes,4,rep,name=pods,proto3" json:"pods,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *K8SNamespace) Reset()         { *m = K8SNamespace{} }
func (m *K8SNamespace) String() string { return proto.CompactTextString(m) }
func (*K8SNamespace) ProtoMessage()    {}
func (*K8SNamespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{17}
}

func (m *K8SNamespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SNamespace.Unmarshal(m, b)
}
func (m *K8SNamespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SNamespace.Marshal(b, m, deterministic)
}
func (m *K8SNamespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SNamespace.Merge(m, src)
}
func (m *K8SNamespace) XXX_Size() int {
	return xxx_messageInfo_K8SNamespace.Size(m)
}
func (m *K8SNamespace) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SNamespace.DiscardUnknown(m)
}

var xxx_messageInfo_K8SNamespace proto.InternalMessageInfo

func (m *K8SNamespace) GetObject() *K8SObject {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *K8SNamespace) GetItems() []*K8SObject {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *K8SNamespace) GetWorkloads() []*K8SObject {
	if m != nil {
		return m.Workloads
	}
	return nil
}

func (m *K8SNamespace) GetPods() []*K8SPod {
	if m != nil {
		return m.Pods
	}
	return nil
}

type K8SPod struct {
	Object               *K8SObject   `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Qos                  string       `protobuf:"bytes,2,opt,name=qos,proto3" json:"qos,omitempty"`
	Containers           []*Container `protobuf:"bytes,3,rep,name=containers,proto3" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *K8SPod) Reset()         { *m = K8SPod{} }
func (m *K8SPod) String() string { return proto.CompactTextString(m) }
func (*K8SPod) ProtoMessage()    {}
func (*K8SPod) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{18}
}

func (m *K8SPod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SPod.Unmarshal(m, b)
}
func (m *K8SPod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SPod.Marshal(b, m, deterministic)
}
func (m *K8SPod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SPod.Merge(m, src)
}
func (m *K8SPod) XXX_Size() int {
	return xxx_messageInfo_K8SPod.Size(m)
}
func (m *K8SPod) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SPod.DiscardUnknown(m)
}

var xxx_messageInfo_K8SPod proto.InternalMessageInfo

func (m *K8SPod) GetObject() *K8SObject {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *K8SPod) GetQos() string {
	if m != nil {
		return m.Qos
	}
	return ""
}

func (m *K8SPod) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type K8SNodeMetric struct {
	NodeName             string    `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Metrics              []*Metric `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *K8SNodeMetric) Reset()         { *m = K8SNodeMetric{} }
func (m *K8SNodeMetric) String() string { return proto.CompactTextString(m) }
func (*K8SNodeMetric) ProtoMessage()    {}
func (*K8SNodeMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{19}
}

func (m *K8SNodeMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SNodeMetric.Unmarshal(m, b)
}
func (m *K8SNodeMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SNodeMetric.Marshal(b, m, deterministic)
}
func (m *K8SNodeMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SNodeMetric.Merge(m, src)
}
func (m *K8SNodeMetric) XXX_Size() int {
	return xxx_messageInfo_K8SNodeMetric.Size(m)
}
func (m *K8SNodeMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SNodeMetric.DiscardUnknown(m)
}

var xxx_messageInfo_K8SNodeMetric proto.InternalMessageInfo

func (m *K8SNodeMetric) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *K8SNodeMetric) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type K8SContainerMetric struct {
	Container            string    `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	Metrics              []*Metric `protobuf:"bytes,2,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *K8SContainerMetric) Reset()         { *m = K8SContainerMetric{} }
func (m *K8SContainerMetric) String() string { return proto.CompactTextString(m) }
func (*K8SContainerMetric) ProtoMessage()    {}
func (*K8SContainerMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{20}
}

func (m *K8SContainerMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SContainerMetric.Unmarshal(m, b)
}
func (m *K8SContainerMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SContainerMetric.Marshal(b, m, deterministic)
}
func (m *K8SContainerMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SContainerMetric.Merge(m, src)
}
func (m *K8SContainerMetric) XXX_Size() int {
	return xxx_messageInfo_K8SContainerMetric.Size(m)
}
func (m *K8SContainerMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SContainerMetric.DiscardUnknown(m)
}

var xxx_messageInfo_K8SContainerMetric proto.InternalMessageInfo

func (m *K8SContainerMetric) GetContainer() string {
	if m != nil {
		return m.Container
	}
	return ""
}

func (m *K8SContainerMetric) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

type K8SPodMetric struct {
	Namespace            string                `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName              string                `protobuf:"bytes,2,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	K8SContainerMetrics  []*K8SContainerMetric `protobuf:"bytes,3,rep,name=k8s_container_metrics,json=k8sContainerMetrics,proto3" json:"k8s_container_metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *K8SPodMetric) Reset()         { *m = K8SPodMetric{} }
func (m *K8SPodMetric) String() string { return proto.CompactTextString(m) }
func (*K8SPodMetric) ProtoMessage()    {}
func (*K8SPodMetric) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{21}
}

func (m *K8SPodMetric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SPodMetric.Unmarshal(m, b)
}
func (m *K8SPodMetric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SPodMetric.Marshal(b, m, deterministic)
}
func (m *K8SPodMetric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SPodMetric.Merge(m, src)
}
func (m *K8SPodMetric) XXX_Size() int {
	return xxx_messageInfo_K8SPodMetric.Size(m)
}
func (m *K8SPodMetric) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SPodMetric.DiscardUnknown(m)
}

var xxx_messageInfo_K8SPodMetric proto.InternalMessageInfo

func (m *K8SPodMetric) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *K8SPodMetric) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *K8SPodMetric) GetK8SContainerMetrics() []*K8SContainerMetric {
	if m != nil {
		return m.K8SContainerMetrics
	}
	return nil
}

type K8SMetrics struct {
	AgentCluster         string           `protobuf:"bytes,1,opt,name=agent_cluster,json=agentCluster,proto3" json:"agent_cluster,omitempty"`
	K8SCluster           string           `protobuf:"bytes,2,opt,name=k8s_cluster,json=k8sCluster,proto3" json:"k8s_cluster,omitempty"`
	K8SNodeMetrics       []*K8SNodeMetric `protobuf:"bytes,3,rep,name=k8s_node_metrics,json=k8sNodeMetrics,proto3" json:"k8s_node_metrics,omitempty"`
	K8SPodMetrics        []*K8SPodMetric  `protobuf:"bytes,4,rep,name=k8s_pod_metrics,json=k8sPodMetrics,proto3" json:"k8s_pod_metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *K8SMetrics) Reset()         { *m = K8SMetrics{} }
func (m *K8SMetrics) String() string { return proto.CompactTextString(m) }
func (*K8SMetrics) ProtoMessage()    {}
func (*K8SMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e65aa89943b533e, []int{22}
}

func (m *K8SMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SMetrics.Unmarshal(m, b)
}
func (m *K8SMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SMetrics.Marshal(b, m, deterministic)
}
func (m *K8SMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SMetrics.Merge(m, src)
}
func (m *K8SMetrics) XXX_Size() int {
	return xxx_messageInfo_K8SMetrics.Size(m)
}
func (m *K8SMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_K8SMetrics proto.InternalMessageInfo

func (m *K8SMetrics) GetAgentCluster() string {
	if m != nil {
		return m.AgentCluster
	}
	return ""
}

func (m *K8SMetrics) GetK8SCluster() string {
	if m != nil {
		return m.K8SCluster
	}
	return ""
}

func (m *K8SMetrics) GetK8SNodeMetrics() []*K8SNodeMetric {
	if m != nil {
		return m.K8SNodeMetrics
	}
	return nil
}

func (m *K8SMetrics) GetK8SPodMetrics() []*K8SPodMetric {
	if m != nil {
		return m.K8SPodMetrics
	}
	return nil
}

func init() {
	proto.RegisterEnum("Metric_SourceType", Metric_SourceType_name, Metric_SourceType_value)
	proto.RegisterType((*Request)(nil), "Request")
	proto.RegisterType((*Response)(nil), "Response")
	proto.RegisterType((*Status)(nil), "Status")
	proto.RegisterType((*Metric)(nil), "Metric")
	proto.RegisterType((*Metrics)(nil), "Metrics")
	proto.RegisterType((*Agent)(nil), "Agent")
	proto.RegisterType((*Node)(nil), "Node")
	proto.RegisterType((*NodeMetrics)(nil), "NodeMetrics")
	proto.RegisterType((*Process)(nil), "Process")
	proto.RegisterType((*ProcessAll)(nil), "ProcessAll")
	proto.RegisterType((*ProcessMetrics)(nil), "ProcessMetrics")
	proto.RegisterType((*Container)(nil), "Container")
	proto.RegisterType((*ContainerAll)(nil), "ContainerAll")
	proto.RegisterType((*ContainerMetrics)(nil), "ContainerMetrics")
	proto.RegisterType((*CPU)(nil), "CPU")
	proto.RegisterType((*K8SObject)(nil), "K8sObject")
	proto.RegisterMapType((map[string]string)(nil), "K8sObject.LabelsEntry")
	proto.RegisterType((*K8SCluster)(nil), "K8sCluster")
	proto.RegisterType((*K8SNamespace)(nil), "K8sNamespace")
	proto.RegisterType((*K8SPod)(nil), "K8sPod")
	proto.RegisterType((*K8SNodeMetric)(nil), "K8sNodeMetric")
	proto.RegisterType((*K8SContainerMetric)(nil), "K8sContainerMetric")
	proto.RegisterType((*K8SPodMetric)(nil), "K8sPodMetric")
	proto.RegisterType((*K8SMetrics)(nil), "K8sMetrics")
}

func init() { proto.RegisterFile("nexclipper.proto", fileDescriptor_4e65aa89943b533e) }

var fileDescriptor_4e65aa89943b533e = []byte{
	// 1621 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x18, 0x4d, 0x73, 0xdb, 0xc6,
	0xd5, 0x20, 0xf8, 0x85, 0x47, 0x52, 0xa2, 0xd7, 0x8a, 0xcb, 0x28, 0x69, 0xcb, 0xa0, 0x33, 0x09,
	0xd3, 0x49, 0xd1, 0x8e, 0xa4, 0x7a, 0xd8, 0xdc, 0x3c, 0x8a, 0xda, 0xe1, 0xb8, 0x95, 0x34, 0xcb,
	0xb8, 0x57, 0x0e, 0x04, 0x6c, 0x24, 0x98, 0x20, 0x16, 0xc1, 0x2e, 0xd5, 0x4a, 0x7f, 0xa0, 0xb7,
	0x4e, 0xee, 0xbd, 0xf7, 0x96, 0x5b, 0x8f, 0xbd, 0xf5, 0xec, 0xff, 0xd3, 0x63, 0xe6, 0xed, 0x07,
	0x00, 0x8a, 0x96, 0x2d, 0xfb, 0xc4, 0xf7, 0xb5, 0xef, 0xbd, 0x7d, 0x5f, 0xfb, 0x40, 0x18, 0x66,
	0xec, 0xef, 0x51, 0x9a, 0xe4, 0x39, 0x2b, 0x82, 0xbc, 0xe0, 0x92, 0xfb, 0x57, 0xd0, 0xa1, 0xec,
	0xfb, 0x35, 0x13, 0x92, 0xfc, 0x1c, 0x20, 0x0e, 0x65, 0xb8, 0x48, 0x32, 0x79, 0x78, 0x30, 0x72,
	0xc6, 0xee, 0xa4, 0x45, 0x3d, 0xa4, 0xcc, 0x90, 0x50, 0x67, 0x3f, 0x3b, 0x1a, 0x35, 0xc6, 0xee,
	0xc4, 0x2d, 0xd9, 0xcf, 0x8e, 0xc8, 0x2f, 0xa1, 0xa7, 0xd8, 0x42, 0x16, 0x49, 0x76, 0x39, 0x72,
	0xc7, 0xee, 0xc4, 0xa3, 0xea, 0xc4, 0x5c, 0x51, 0xfc, 0x1f, 0x1d, 0xe8, 0x52, 0x26, 0x72, 0x9e,
	0x09, 0x46, 0x46, 0xd0, 0x11, 0xeb, 0x28, 0x62, 0x42, 0x8c, 0x9c, 0xb1, 0x33, 0xe9, 0x52, 0x8b,
	0x12, 0x02, 0xcd, 0x88, 0xc7, 0x6c, 0xd4, 0x18, 0x3b, 0x93, 0x01, 0x55, 0x30, 0xd9, 0x83, 0x16,
	0x2b, 0x0a, 0x5e, 0x8c, 0xdc, 0xb1, 0x33, 0xf1, 0xa8, 0x46, 0xee, 0xf8, 0xdb, 0x7c, 0xbb, 0xbf,
	0xad, 0x77, 0xf8, 0xdb, 0xde, 0xf2, 0xf7, 0x6b, 0x68, 0xcf, 0x65, 0x28, 0xd7, 0xca, 0xa5, 0xf5,
	0x3a, 0x89, 0x95, 0xa7, 0x1e, 0x55, 0x30, 0xf9, 0x14, 0x3c, 0x99, 0xac, 0x98, 0x90, 0xe1, 0x2a,
	0x57, 0xbe, 0xba, 0xb4, 0x22, 0xf8, 0xff, 0x74, 0xa1, 0xfd, 0x17, 0x26, 0x8b, 0x24, 0x42, 0xdf,
	0xaf, 0xc3, 0x74, 0xcd, 0xd4, 0x69, 0x87, 0x6a, 0x84, 0xec, 0x40, 0x43, 0x0a, 0x73, 0xae, 0x21,
	0x05, 0xc6, 0x23, 0x4a, 0xd7, 0x42, 0x32, 0x7b, 0x47, 0x8b, 0xa2, 0xf1, 0x0c, 0xe3, 0xd1, 0xd4,
	0xc6, 0x11, 0x26, 0x87, 0xd0, 0x13, 0x7c, 0x5d, 0x44, 0x6c, 0x21, 0x6f, 0x72, 0x36, 0x6a, 0x8d,
	0x9d, 0xc9, 0xce, 0x01, 0x09, 0xb4, 0xc5, 0x60, 0xae, 0x58, 0xdf, 0xde, 0xe4, 0x8c, 0x82, 0x28,
	0x61, 0xf2, 0x14, 0xda, 0x1a, 0x1b, 0xb5, 0x95, 0x2a, 0x83, 0x61, 0x9c, 0x8c, 0xb2, 0x24, 0x93,
	0xa3, 0xce, 0xd8, 0xc1, 0x30, 0x6a, 0xca, 0x2c, 0x93, 0x64, 0x1f, 0xba, 0x2c, 0x8b, 0x73, 0x8e,
	0xcc, 0xae, 0x3a, 0x58, 0xe2, 0xca, 0xb7, 0x70, 0xc5, 0x46, 0x9e, 0xf1, 0x2d, 0x5c, 0xa9, 0x5c,
	0xa5, 0xe1, 0x05, 0x4b, 0x47, 0xa0, 0x73, 0xa5, 0x10, 0x94, 0x54, 0xae, 0xf6, 0xb4, 0x24, 0xc2,
	0xfe, 0x2b, 0x80, 0xca, 0x55, 0xd2, 0x85, 0xe6, 0xe9, 0xd9, 0xe9, 0xc9, 0xf0, 0x91, 0x86, 0xbe,
	0x39, 0x19, 0x3a, 0xa4, 0x07, 0x9d, 0x73, 0x7a, 0x76, 0x7c, 0x32, 0x9f, 0x0f, 0x1b, 0x64, 0x00,
	0xde, 0xf1, 0xd9, 0xe9, 0xb7, 0xcf, 0x67, 0xa7, 0x27, 0x74, 0xe8, 0x92, 0x3e, 0x74, 0x5f, 0x4c,
	0xe7, 0x0b, 0x25, 0x09, 0x28, 0x89, 0xd8, 0xf9, 0xd9, 0x37, 0xc3, 0x1e, 0x79, 0x0c, 0x03, 0x44,
	0x2a, 0xe9, 0xbe, 0xff, 0x15, 0x74, 0x74, 0x74, 0x04, 0xf9, 0x0c, 0x3a, 0x2b, 0x0d, 0xaa, 0x22,
	0xee, 0x1d, 0x74, 0x4c, 0xe0, 0xa8, 0xa5, 0xfb, 0x12, 0x5a, 0xcf, 0x2f, 0x59, 0x26, 0x31, 0x2d,
	0xd7, 0xac, 0x10, 0x09, 0xcf, 0x4c, 0xf2, 0x2d, 0x8a, 0xf9, 0x5f, 0x85, 0xd1, 0x55, 0x92, 0xb1,
	0x59, 0xac, 0xf2, 0xe8, 0xd1, 0x8a, 0xf0, 0x96, 0x74, 0x7e, 0x5c, 0x4b, 0x67, 0xef, 0xa0, 0x15,
	0x9c, 0xf2, 0x98, 0xe9, 0xac, 0xfa, 0xff, 0x6f, 0x40, 0x13, 0x51, 0x0c, 0xd6, 0x15, 0x17, 0xd2,
	0xd6, 0x1b, 0xc2, 0x58, 0x30, 0x5c, 0x18, 0x43, 0x0d, 0x2e, 0x30, 0x2d, 0x79, 0x1a, 0xca, 0xef,
	0x78, 0xb1, 0x32, 0x26, 0x4a, 0x9c, 0x7c, 0x01, 0xbb, 0x16, 0x5e, 0x7c, 0x17, 0xae, 0x92, 0xf4,
	0xc6, 0x54, 0xcf, 0x8e, 0x25, 0xff, 0x51, 0x51, 0xc9, 0x97, 0x30, 0x2c, 0x05, 0xed, 0x3d, 0x5b,
	0x4a, 0xb2, 0x54, 0xf0, 0x57, 0x73, 0xdf, 0x43, 0xf8, 0xe8, 0x3a, 0x29, 0xe4, 0x3a, 0x4c, 0x93,
	0xdb, 0x50, 0x26, 0x3c, 0x5b, 0x88, 0x1b, 0x21, 0xd9, 0xca, 0x14, 0xd3, 0xde, 0x26, 0x73, 0xae,
	0x78, 0xe4, 0xb7, 0xf0, 0xe4, 0xce, 0xa1, 0x82, 0xa7, 0x4c, 0xd5, 0x98, 0x47, 0xc9, 0x26, 0x8b,
	0xf2, 0x54, 0xd5, 0xe8, 0x3a, 0xc7, 0x36, 0x52, 0xa5, 0xd6, 0xa4, 0x06, 0xc3, 0x88, 0x24, 0xf9,
	0xf5, 0x91, 0x2d, 0x34, 0x84, 0x0d, 0xed, 0x99, 0xa9, 0x33, 0x05, 0x23, 0x2d, 0xe7, 0x85, 0x54,
	0x65, 0x36, 0xa0, 0x0a, 0x26, 0x7e, 0x95, 0xef, 0xbe, 0x0a, 0x7a, 0xd7, 0xe4, 0x5b, 0x54, 0x09,
	0x5f, 0x40, 0x0f, 0x23, 0x6f, 0x4b, 0xa4, 0x96, 0x3e, 0x67, 0xab, 0x1b, 0x55, 0x6a, 0x1a, 0xb5,
	0xd4, 0xd4, 0x0c, 0xb8, 0xf7, 0x19, 0xf8, 0xd1, 0x81, 0xce, 0x79, 0xc1, 0xd5, 0x84, 0xfb, 0x14,
	0xbc, 0x88, 0x67, 0x32, 0x4c, 0xb2, 0x52, 0x7f, 0x45, 0x20, 0x43, 0x70, 0xf3, 0x44, 0x97, 0x54,
	0x8b, 0x22, 0x58, 0x76, 0x99, 0x5b, 0xeb, 0xb2, 0x21, 0xb8, 0xd1, 0x2a, 0x36, 0x69, 0x45, 0x50,
	0x0d, 0x29, 0xc1, 0x0a, 0x93, 0x3f, 0x05, 0x63, 0x2f, 0x5e, 0x16, 0x7c, 0x9d, 0x9b, 0x24, 0x69,
	0xa4, 0xee, 0x6f, 0xe7, 0x3e, 0x7f, 0x2f, 0x00, 0x8c, 0xbb, 0xcf, 0xd3, 0xf4, 0x3d, 0xe3, 0xf1,
	0x39, 0x78, 0xb9, 0x3e, 0xcb, 0x84, 0x7a, 0x07, 0xd0, 0x82, 0xd1, 0x46, 0x2b, 0x96, 0xff, 0x6f,
	0x07, 0x76, 0x0c, 0xf9, 0xc3, 0x02, 0xbf, 0x11, 0x48, 0xf7, 0x9e, 0x40, 0x36, 0xb7, 0x03, 0xd9,
	0xaa, 0x05, 0xb2, 0x16, 0x8c, 0xf6, 0x7d, 0xc1, 0xf8, 0xc1, 0x01, 0xef, 0xb8, 0xd4, 0x6b, 0x47,
	0x99, 0x53, 0x8d, 0x32, 0xf2, 0x19, 0xf4, 0x4b, 0xc3, 0x8b, 0xc4, 0x0e, 0x84, 0x5e, 0x49, 0x9b,
	0xbd, 0x39, 0x8b, 0x7b, 0xd0, 0x4a, 0x56, 0xe1, 0xa5, 0x1d, 0xee, 0x1a, 0x79, 0x90, 0x4b, 0x57,
	0xd0, 0x2f, 0x3d, 0x7a, 0xff, 0x0c, 0xfd, 0x1a, 0xa0, 0x74, 0xcd, 0xa6, 0x08, 0x82, 0x52, 0x21,
	0xad, 0x71, 0xfd, 0x7f, 0x38, 0x30, 0x2c, 0x39, 0x1f, 0x96, 0xa7, 0xbb, 0xd1, 0x71, 0xb7, 0xa3,
	0x53, 0xbb, 0x73, 0xf3, 0xbe, 0x3b, 0xff, 0xb7, 0x01, 0xee, 0xf1, 0xf9, 0x4b, 0x55, 0xfb, 0xf9,
	0x5a, 0x19, 0x6e, 0x51, 0x04, 0xc9, 0x27, 0xe0, 0x5d, 0xb3, 0x2c, 0xe6, 0xb5, 0xd8, 0x77, 0x35,
	0x61, 0x16, 0xe3, 0x4c, 0x31, 0x43, 0x50, 0xdb, 0x35, 0x18, 0x06, 0x7f, 0xc5, 0x63, 0x96, 0xda,
	0xe0, 0x2b, 0x04, 0xe7, 0xaa, 0x90, 0x2c, 0xcf, 0x71, 0x27, 0x68, 0x29, 0x0b, 0x25, 0x8e, 0x2b,
	0x43, 0x7e, 0x75, 0x23, 0x92, 0x28, 0x4c, 0xd1, 0x90, 0x6e, 0x2a, 0xb0, 0xa4, 0x59, 0x4c, 0x7e,
	0x06, 0x9d, 0x88, 0x17, 0x0c, 0x99, 0x7a, 0xc6, 0xb5, 0x11, 0x9d, 0xc5, 0x68, 0x0b, 0x21, 0xa1,
	0xc6, 0x5a, 0x8b, 0x6a, 0x04, 0x5f, 0x5e, 0x65, 0x74, 0x51, 0x7b, 0x44, 0x3d, 0x45, 0x39, 0x35,
	0x3d, 0xbe, 0xba, 0xba, 0x55, 0xf3, 0xcd, 0xa1, 0x08, 0xe2, 0x81, 0x28, 0x8c, 0xae, 0xd8, 0x42,
	0x24, 0xb7, 0xfa, 0x2d, 0x6d, 0x51, 0x4f, 0x51, 0xe6, 0xc9, 0x2d, 0x53, 0x6f, 0x52, 0x12, 0x15,
	0x5c, 0xed, 0x4f, 0x7d, 0xa3, 0xce, 0x12, 0xfc, 0xd7, 0x0d, 0xf0, 0x5e, 0x4c, 0xc5, 0xd9, 0xc5,
	0x2b, 0x16, 0x49, 0xbc, 0x4b, 0x98, 0x27, 0xe5, 0xd4, 0xd7, 0x31, 0x80, 0x30, 0x4f, 0xec, 0xc0,
	0xdf, 0x87, 0xee, 0x8a, 0xc9, 0x10, 0x17, 0x22, 0x93, 0xe3, 0x12, 0xc7, 0x24, 0x8b, 0x9c, 0x45,
	0x36, 0xc9, 0x08, 0xab, 0xf5, 0x42, 0xad, 0x4b, 0x36, 0xcc, 0xa2, 0x5c, 0x9e, 0x96, 0x49, 0x16,
	0xdb, 0xa6, 0x43, 0xb8, 0xec, 0x85, 0x76, 0xad, 0x17, 0x02, 0x68, 0xab, 0x55, 0x01, 0x87, 0x12,
	0xd6, 0xe3, 0xd3, 0xa0, 0x74, 0x36, 0xf8, 0xb3, 0x62, 0x9c, 0x64, 0xb2, 0xb8, 0xa1, 0x46, 0x0a,
	0x2f, 0xb0, 0x9c, 0x8a, 0x85, 0x2d, 0x43, 0xbd, 0x9a, 0xc0, 0x72, 0x2a, 0x8e, 0x4d, 0x25, 0xfe,
	0x0a, 0x06, 0x28, 0x80, 0xca, 0x45, 0x1e, 0x46, 0x36, 0xc0, 0xfd, 0xe5, 0x54, 0x9c, 0x5a, 0xda,
	0xfe, 0x1f, 0xa0, 0x57, 0x53, 0x8e, 0x21, 0x5f, 0xb2, 0x1b, 0x73, 0x5f, 0x04, 0xab, 0xf5, 0x4d,
	0xdf, 0x55, 0x23, 0x5f, 0x37, 0xa6, 0x8e, 0xff, 0x1f, 0x07, 0xe0, 0x45, 0x65, 0xce, 0x87, 0x36,
	0x57, 0xde, 0xaa, 0xd3, 0xd8, 0x4f, 0xa5, 0xff, 0xd4, 0x70, 0xd0, 0xa5, 0x10, 0xf7, 0x8a, 0xd2,
	0x6b, 0xad, 0xb4, 0xaf, 0x88, 0x56, 0xd1, 0x11, 0xec, 0x6c, 0xf8, 0x6d, 0x1b, 0x74, 0x80, 0x0a,
	0x4b, 0xcf, 0xe9, 0xa0, 0x7e, 0x0f, 0x41, 0xbe, 0x00, 0x4f, 0x9d, 0xe2, 0x31, 0x13, 0x6a, 0x17,
	0xde, 0xf4, 0xa0, 0x8b, 0xd2, 0xc8, 0xf3, 0xff, 0xe5, 0x40, 0xbf, 0xae, 0xe8, 0x41, 0x8e, 0x8f,
	0xa1, 0x95, 0x48, 0xb6, 0xb2, 0x1b, 0x53, 0x5d, 0x44, 0x33, 0xc8, 0x04, 0xbc, 0xbf, 0xf1, 0x62,
	0x99, 0xf2, 0x30, 0xae, 0x26, 0x4a, 0x25, 0x55, 0x31, 0xc9, 0x27, 0xf8, 0x46, 0xc7, 0xd6, 0xc9,
	0x0e, 0x0a, 0x9d, 0xf3, 0x98, 0x2a, 0xa2, 0xff, 0x0a, 0xda, 0x1a, 0x7f, 0x90, 0x5b, 0x43, 0x70,
	0xbf, 0x2f, 0xb7, 0x22, 0x04, 0xdf, 0x6b, 0xb2, 0x9d, 0xe1, 0x9a, 0x28, 0xaa, 0x77, 0x1f, 0xc7,
	0x08, 0xc6, 0x4f, 0xb7, 0xa3, 0xa9, 0x79, 0x24, 0xa8, 0x6e, 0x7c, 0xc0, 0xda, 0xf8, 0x12, 0x08,
	0x16, 0xc4, 0xe6, 0xb0, 0x7c, 0xc7, 0x73, 0xff, 0x00, 0xb5, 0x3f, 0xe8, 0x8c, 0x9d, 0xf3, 0xb8,
	0xd2, 0x58, 0x55, 0xb5, 0xd1, 0x58, 0x12, 0xc8, 0xc7, 0xd0, 0xcd, 0x79, 0xac, 0x2f, 0xa1, 0x23,
	0xd3, 0xc9, 0x79, 0xac, 0xee, 0xf0, 0x27, 0xf8, 0x48, 0xf5, 0x4c, 0x39, 0x8c, 0xab, 0xbd, 0x05,
	0x4d, 0x3f, 0x09, 0xb6, 0xdd, 0xa7, 0x4f, 0x96, 0x5b, 0x34, 0xe1, 0xff, 0x4f, 0xd7, 0xbe, 0x7d,
	0x0e, 0xb6, 0xea, 0xda, 0x79, 0x43, 0x5d, 0xdf, 0x69, 0xd8, 0xc6, 0x56, 0xc3, 0x4e, 0x61, 0x68,
	0x4b, 0xf8, 0x8e, 0x63, 0x3b, 0xc1, 0x46, 0xa2, 0xe8, 0xce, 0xb2, 0x8e, 0x0a, 0xf2, 0x7b, 0xd8,
	0xc5, 0x93, 0x78, 0xed, 0xea, 0x15, 0x29, 0x7b, 0xa6, 0x0c, 0x9c, 0xea, 0x99, 0x12, 0x13, 0x07,
	0xaf, 0x5d, 0x7c, 0xd7, 0xd3, 0x94, 0x45, 0x92, 0x17, 0xe4, 0x17, 0xd0, 0x3c, 0xc7, 0x29, 0xdf,
	0x09, 0xf4, 0x67, 0xdf, 0xbe, 0x05, 0xfc, 0x47, 0x13, 0xe7, 0x77, 0x0e, 0xf1, 0xa1, 0xf7, 0x32,
	0x8f, 0x43, 0xc9, 0xf4, 0xa7, 0x41, 0x3b, 0x50, 0xbf, 0xfb, 0x5e, 0x60, 0x3f, 0x6a, 0xfd, 0x47,
	0xe4, 0x4b, 0x18, 0x68, 0x19, 0xbb, 0xeb, 0xf5, 0x82, 0x6a, 0x8d, 0xda, 0x14, 0xfd, 0x0d, 0xec,
	0x6a, 0xd1, 0x6a, 0xb3, 0x18, 0x04, 0xf5, 0x37, 0x7d, 0x53, 0xfc, 0x73, 0x18, 0x50, 0x86, 0xfb,
	0xac, 0xbd, 0x73, 0xf9, 0x40, 0x6e, 0xca, 0x05, 0xf0, 0x58, 0xcb, 0xd5, 0xe3, 0xd3, 0x0f, 0x6a,
	0xd8, 0xa6, 0xfc, 0x11, 0xec, 0x69, 0xf9, 0x3b, 0x9b, 0xd8, 0x6e, 0xb0, 0x49, 0xd8, 0x3c, 0x35,
	0x85, 0xa7, 0xfa, 0xd4, 0xd6, 0x66, 0xf0, 0x38, 0xb8, 0x4b, 0xda, 0x3c, 0xf9, 0x15, 0x0c, 0xf5,
	0xb5, 0x6b, 0xa3, 0xb3, 0x17, 0x54, 0xc8, 0x96, 0xb4, 0xb6, 0x53, 0x2b, 0x36, 0x25, 0xfd, 0x26,
	0xdd, 0x17, 0x6d, 0xf5, 0x97, 0xc6, 0xe1, 0x4f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x5a, 0x81,
	0x76, 0xe6, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CollectorClient is the client API for Collector service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectorClient interface {
	Ping(ctx context.Context, opts ...grpc.CallOption) (Collector_PingClient, error)
	UpdateAgent(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Response, error)
	UpdateProcess(ctx context.Context, in *ProcessAll, opts ...grpc.CallOption) (*Response, error)
	UpdateContainer(ctx context.Context, in *ContainerAll, opts ...grpc.CallOption) (*Response, error)
	ReportMetrics(ctx context.Context, in *Metrics, opts ...grpc.CallOption) (*Response, error)
	ReportNodeMetrics(ctx context.Context, in *NodeMetrics, opts ...grpc.CallOption) (*Response, error)
	ReportProcessMetrics(ctx context.Context, in *ProcessMetrics, opts ...grpc.CallOption) (*Response, error)
	ReportContainerMetrics(ctx context.Context, in *ContainerMetrics, opts ...grpc.CallOption) (*Response, error)
	UpdateK8SCluster(ctx context.Context, in *K8SCluster, opts ...grpc.CallOption) (*Response, error)
	ReportK8SMetrics(ctx context.Context, in *K8SMetrics, opts ...grpc.CallOption) (*Response, error)
}

type collectorClient struct {
	cc *grpc.ClientConn
}

func NewCollectorClient(cc *grpc.ClientConn) CollectorClient {
	return &collectorClient{cc}
}

func (c *collectorClient) Ping(ctx context.Context, opts ...grpc.CallOption) (Collector_PingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Collector_serviceDesc.Streams[0], "/Collector/Ping", opts...)
	if err != nil {
		return nil, err
	}
	x := &collectorPingClient{stream}
	return x, nil
}

type Collector_PingClient interface {
	Send(*Status) error
	Recv() (*Status, error)
	grpc.ClientStream
}

type collectorPingClient struct {
	grpc.ClientStream
}

func (x *collectorPingClient) Send(m *Status) error {
	return x.ClientStream.SendMsg(m)
}

func (x *collectorPingClient) Recv() (*Status, error) {
	m := new(Status)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *collectorClient) UpdateAgent(ctx context.Context, in *Agent, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/UpdateAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) UpdateProcess(ctx context.Context, in *ProcessAll, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/UpdateProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) UpdateContainer(ctx context.Context, in *ContainerAll, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/UpdateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) ReportMetrics(ctx context.Context, in *Metrics, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/ReportMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) ReportNodeMetrics(ctx context.Context, in *NodeMetrics, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/ReportNodeMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) ReportProcessMetrics(ctx context.Context, in *ProcessMetrics, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/ReportProcessMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) ReportContainerMetrics(ctx context.Context, in *ContainerMetrics, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/ReportContainerMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) UpdateK8SCluster(ctx context.Context, in *K8SCluster, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/UpdateK8sCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorClient) ReportK8SMetrics(ctx context.Context, in *K8SMetrics, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/Collector/ReportK8sMetrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollectorServer is the server API for Collector service.
type CollectorServer interface {
	Ping(Collector_PingServer) error
	UpdateAgent(context.Context, *Agent) (*Response, error)
	UpdateProcess(context.Context, *ProcessAll) (*Response, error)
	UpdateContainer(context.Context, *ContainerAll) (*Response, error)
	ReportMetrics(context.Context, *Metrics) (*Response, error)
	ReportNodeMetrics(context.Context, *NodeMetrics) (*Response, error)
	ReportProcessMetrics(context.Context, *ProcessMetrics) (*Response, error)
	ReportContainerMetrics(context.Context, *ContainerMetrics) (*Response, error)
	UpdateK8SCluster(context.Context, *K8SCluster) (*Response, error)
	ReportK8SMetrics(context.Context, *K8SMetrics) (*Response, error)
}

// UnimplementedCollectorServer can be embedded to have forward compatible implementations.
type UnimplementedCollectorServer struct {
}

func (*UnimplementedCollectorServer) Ping(srv Collector_PingServer) error {
	return status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedCollectorServer) UpdateAgent(ctx context.Context, req *Agent) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAgent not implemented")
}
func (*UnimplementedCollectorServer) UpdateProcess(ctx context.Context, req *ProcessAll) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProcess not implemented")
}
func (*UnimplementedCollectorServer) UpdateContainer(ctx context.Context, req *ContainerAll) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContainer not implemented")
}
func (*UnimplementedCollectorServer) ReportMetrics(ctx context.Context, req *Metrics) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportMetrics not implemented")
}
func (*UnimplementedCollectorServer) ReportNodeMetrics(ctx context.Context, req *NodeMetrics) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportNodeMetrics not implemented")
}
func (*UnimplementedCollectorServer) ReportProcessMetrics(ctx context.Context, req *ProcessMetrics) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportProcessMetrics not implemented")
}
func (*UnimplementedCollectorServer) ReportContainerMetrics(ctx context.Context, req *ContainerMetrics) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportContainerMetrics not implemented")
}
func (*UnimplementedCollectorServer) UpdateK8SCluster(ctx context.Context, req *K8SCluster) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateK8SCluster not implemented")
}
func (*UnimplementedCollectorServer) ReportK8SMetrics(ctx context.Context, req *K8SMetrics) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportK8SMetrics not implemented")
}

func RegisterCollectorServer(s *grpc.Server, srv CollectorServer) {
	s.RegisterService(&_Collector_serviceDesc, srv)
}

func _Collector_Ping_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CollectorServer).Ping(&collectorPingServer{stream})
}

type Collector_PingServer interface {
	Send(*Status) error
	Recv() (*Status, error)
	grpc.ServerStream
}

type collectorPingServer struct {
	grpc.ServerStream
}

func (x *collectorPingServer) Send(m *Status) error {
	return x.ServerStream.SendMsg(m)
}

func (x *collectorPingServer) Recv() (*Status, error) {
	m := new(Status)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Collector_UpdateAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Agent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).UpdateAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/UpdateAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).UpdateAgent(ctx, req.(*Agent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_UpdateProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessAll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).UpdateProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/UpdateProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).UpdateProcess(ctx, req.(*ProcessAll))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_UpdateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerAll)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).UpdateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/UpdateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).UpdateContainer(ctx, req.(*ContainerAll))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_ReportMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Metrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).ReportMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/ReportMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).ReportMetrics(ctx, req.(*Metrics))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_ReportNodeMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeMetrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).ReportNodeMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/ReportNodeMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).ReportNodeMetrics(ctx, req.(*NodeMetrics))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_ReportProcessMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessMetrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).ReportProcessMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/ReportProcessMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).ReportProcessMetrics(ctx, req.(*ProcessMetrics))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_ReportContainerMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerMetrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).ReportContainerMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/ReportContainerMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).ReportContainerMetrics(ctx, req.(*ContainerMetrics))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_UpdateK8SCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(K8SCluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).UpdateK8SCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/UpdateK8SCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).UpdateK8SCluster(ctx, req.(*K8SCluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _Collector_ReportK8SMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(K8SMetrics)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorServer).ReportK8SMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Collector/ReportK8SMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorServer).ReportK8SMetrics(ctx, req.(*K8SMetrics))
	}
	return interceptor(ctx, in, info, handler)
}

var _Collector_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Collector",
	HandlerType: (*CollectorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateAgent",
			Handler:    _Collector_UpdateAgent_Handler,
		},
		{
			MethodName: "UpdateProcess",
			Handler:    _Collector_UpdateProcess_Handler,
		},
		{
			MethodName: "UpdateContainer",
			Handler:    _Collector_UpdateContainer_Handler,
		},
		{
			MethodName: "ReportMetrics",
			Handler:    _Collector_ReportMetrics_Handler,
		},
		{
			MethodName: "ReportNodeMetrics",
			Handler:    _Collector_ReportNodeMetrics_Handler,
		},
		{
			MethodName: "ReportProcessMetrics",
			Handler:    _Collector_ReportProcessMetrics_Handler,
		},
		{
			MethodName: "ReportContainerMetrics",
			Handler:    _Collector_ReportContainerMetrics_Handler,
		},
		{
			MethodName: "UpdateK8sCluster",
			Handler:    _Collector_UpdateK8SCluster_Handler,
		},
		{
			MethodName: "ReportK8sMetrics",
			Handler:    _Collector_ReportK8SMetrics_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Ping",
			Handler:       _Collector_Ping_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "nexclipper.proto",
}

